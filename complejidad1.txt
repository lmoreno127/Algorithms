Ejercicio 1

Complejidad temporal:O(n^2)

Ejercicio 2
findLongestWordLength(str)
longest = 0

convertir str a Array
    for palabra in Array
        longest = palabra[0].longitud
        si palabra.longitud > longest
            longest = palabra.longitud

    retornar longest
    
Complejidad temporal:O(n)

Ejercicio 3
Complejidad temporal:O(n^2)

Ejercicio 4
Complejidad temporal:O(n^2)

Ejercicio 5
Algoritmo 1
tictactoe(game)
  if (game[0][0]==game[1][0]) and (game[1][0]==game[2][0])
    return true
    
  else if (game[0][1]==game[1][1]) and (game[1][1]==game[2][1])
    return true
  
  else if (game[0][2]==game[1][2]) and (game[1][2]==game[2][2])
  	return true
    
  else if (game[0][0]==game[1][1]) and (game[1][1]==game[2][2])
    return true

	else if (game[0][2]==game[1][1]) and (game[1][1]==game[2][0])
  	return true
    
  else if (game[0][0]==game[0][1]) and (game[0][1]==game[0][2])
     return true  
     
  else if (game[2][0]==game[2][1]) and (game[2][1]==game[2][2])
  	return true
  else if (game[1][0]==game[1][1]) and (game[1][1]==game[1][2])
  	return true
  else
      return false
 Complejidad Temporal:O(1)
 
 Algoritmo 2
 tictactoe(matrix)

for fila1 in matrix
    if i == i
    retorna true 
    for fila2 in matrix
        if j == j
        retorna true
        for fila3 in matrix                             O(1+(n+1)*n+12) =0(1+n^2+n+12)=O(n^2)
        
        if k = k retorna true
            if fila1[0] == fila2[0] == fila3[0] 
            retorna true
            if fila1[1] == fila2[1] == fila3[1] 
            retorna true
            if fila1[2] == fila2[2] == fila3[2] 
            retorna true
            if fila1[0] == fila2[1] == fila3[2] 
            retorna true
            if fila1[2] == fila2[1] == fila3[0] 
            retorna true
Complejidad temporal:O(n^2)